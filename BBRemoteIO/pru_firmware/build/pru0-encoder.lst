PRU Assembler Unix v2.3.3 Sat Feb  1 11:57:27 2025

Tools Copyright (c) 2012-2018 Texas Instruments Incorporated
src/pru0-encoder.asm                                                 PAGE    1

       1
       2; PRU setup definitions
       3        ; .asg    C4,     CONST_SYSCFG
       4        .asg    C28,    CONST_PRUSHAREDRAM
       5
       6        .asg    0x22000,        PRU0_CTRL
       7        .asg    0x24000,    PRU1_CTRL       ; page 19
       8        ; .asg    0x28,       CTPPR0          ; page 75
       9
      10        .asg    0x000,  OWN_RAM
      11        .asg    0x020,  OTHER_RAM
      12        .asg    0x100,  SHARED_RAM       ; This is so prudebug can find it.
      13        .asg    64,     CNT_OFFSET
      14
      15        .asg    0x00000000, ram0_addr   ; local addr ram0. In linux space addr is 0x4a300000
      16        .asg    0x00002000, ram1_addr   ; local addr ram0. In linux space addr is 0x4a302000
      17        .asg    0x00010000, shared_addr ; local addr ram0. In linux space addr is 0x4a310000
      18        .asg    0x800, data0            ; 2048 in dec
      19        .asg    0xfff, data1            ; 4095 in dec
      20        .asg    0x0ff, data3            ; 255 in dec
      21        .clink
      22        .global start
      23 00000000                 start:
      24; initialize by setting current state of two channels
      25 00000000 080080240000C0          LDI32   r0, data0         ;
      26 00000008 000081240000C1          LDI32   r1, ram0_addr     ;
      27 00000010 0FFF82240000C2          LDI32   r2, data1         ;
      28 00000018 200083240000C3          LDI32   r3, ram1_addr     ;
      29 00000020 00FF84240000C4          LDI32   r4, data3         ;
      30 00000028 000085240001C5          LDI32   r5, shared_addr   ;
      31 00000030 000000E1002180          SBBO    &r0, r1, 0, 4   ; write to ram0
      32 00000034 000000E1002382          SBBO    &r2, r3, 0, 4   ; write to ram1
      33 00000038 000000E1002584          SBBO    &r4, r5, 0, 4   ; write to shared
      34
      35 0000003c 0000002A000000          HALT    ; we should never actually get here

No Assembly Errors, No Assembly Warnings
